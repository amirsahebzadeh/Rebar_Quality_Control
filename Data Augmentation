!pip install opencv-python-headless numpy imgaug
import cv2
import numpy as np
import imgaug.augmenters as iaa

def augment_image(image_path):
    # Read the image
    image = cv2.imread(image_path)
    
    # Define individual augmenters
    augmenters = [
        # Horizontal flip
        iaa.Fliplr(1.0),
        
        # Rotation
        iaa.Affine(rotate=(-10, 10)),
        
        # Scaling
        iaa.Affine(scale=(0.8, 1.2)),
        
        # Translation
        iaa.Affine(translate_percent={"x": (-0.2, 0.2), "y": (-0.2, 0.2)}),
        
        # Shearing
        iaa.Affine(shear=(-10, 10)),
        
        # Gaussian blur
        iaa.GaussianBlur(sigma=(0, 1.0)),
        
        # Gaussian noise
        iaa.AdditiveGaussianNoise(scale=(10, 50)),
        
        # Multiplicative noise
        iaa.Multiply((0.8, 1.2), per_channel=0.5),
        
        # Brightness and contrast adjustments
        iaa.Sequential([
            iaa.LinearContrast((0.8, 1.2)),
            iaa.MultiplyBrightness((0.8, 1.2))
        ])
    ]
    
    # Apply each augmentation independently and save/display the results
    for i, augmenter in enumerate(augmenters):
        augmented_image = augmenter(image=image)
        window_name = f'Augmented Image {i+1}'
        cv2.imshow(window_name, augmented_image)
        cv2.imwrite(f'augmented_image_{i+1}.jpg', augmented_image)
    
    # Display original image
    cv2.imshow('Original Image', image)
    cv2.waitKey(0)
    cv2.destroyAllWindows()

#image path
image_path = 'path/to/your/image.jpg'
augment_image(image_path)
